// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Course {
  id          Int      @default(autoincrement()) @id
  name        String
  professor   User   @relation("professor", fields: [professorId], references: [id])
  professorId String
  posts       Post[]      @relation("PostsOnCourse")
  students    User[]      @relation("attended")
  createdAt   DateTime    @default(now()) @map(name: "created_at")

  @@unique([name, professorId])
}

model Post {
  id        String        @default(cuid()) @id
  title     String
  content   String?
  course     Course       @relation("PostsOnCourse", fields: [courseName, authorId], references: [name, professorId])
  courseName   String
  authorId  String
  createdAt DateTime      @default(now()) @map(name: "created_at")
  updatedAt DateTime      @updatedAt @map(name: "updated_at")
}

model User {
  id  String  @id
  password String
  name String
  infoId  Int @map(name: "info_id")
  role  Role  @default(STUDENT)
  createdAt DateTime  @default(now()) @map(name: "created_at")
  teached Course[] @relation("professor")
  attended Course[] @relation("attended")

  @@unique([infoId, role])
}

enum Role {
  STUDENT
  PROFESSOR
}
